# Abstract

This page will show the creation and any changes made to this virtual machine throughout this project.

## Preparations

To create this server I first need a machine to run it on, and the install image plus license key for it.  I already own a machine for this project, [Server 2 detailed here](https://cleverness.tech/homelab/).  I already use Proxmox as the hypervisor for this machine, so this will be created Signing it on Azure with a student account and going through that setup process actually provides access to these images and a license for both Windows Server 2016 and Windows Server 2019.  I'll be using the 2016 version for the Domain Controller for no particular reason.

## Creating the VM

1) From the Proxmox Web Management GUI, click the blue Create VM button in the top right corner.

2) It'll ask for which node you want to install on(irrelevant for this install, I am not using a clustered setup) and the VM ID and name for labeling it on Proxmox.  I gave this one VM ID 104 and the name "4900DomainController" as the title of the page states, mostly to just easily label what this machine does while I go through this project.  Also click Advanced in the bottom here to see more options for the rest of the process.  There's one here asking if I want this VM to be started on machine boot.  As it's a critical service, check Yes.

3) On the OS tab, select the image for the server.  Again, I'm using Windows Server 2016 for this.  For Guest OS select Windows and there's different versions for the different releases, the latest one for Windows 10 + Server 2016/2019 get selected by default and are fine for this.

4) For System Tab, nothing really needs to change here, I leave it on Default

5) The Hard Disk Tab will have us define where we want the VM to be stored and how much space we want to allocate to it.  

6) The CPU tab is for deciding how many cores I want this VM to have.  For now I'm giving it 1 core, but this can be easily changed later. 

7) The Memory tab will be where I define how much memory the machine will have access to.  My server has a total of 48 GB of RAM available to give.  At the start I'm giving this VM a minimum of 2048 MiB(or 2GB) and a maximum of 4096 MiB(or 4GB) of RAM.  Like the CPU tab, this can be easily changed later and increased/decreased.
 
8) The Network tab is for defining which Bridge(created before this step) we'll be using for this VM and any VLANs(or virtual LANs, for network traffic segregation) we might want to assign to it.  This VM gets a dedicated ethernet nic assigned to bridge vmbr6 since it will be syncing constantly to Azure later on in this project.  

9) The Confirm screen will give you the option to review the choices you made, and also the option to start after it's created, which 

And it's done, afterwards wait a few seconds for Proxmox to create the VM and allocate space for it and it should automatically be started and on the Windows install screen.  I won't bother with the install process for this, it will only have access the drive size we assigned in Step 5.

## Domain Controller Promotion

After logging in to the server, Click the Manage button and then click Add Roles and Features.  Goal of this Server is to serve as my Domain Controller, so after selecting my server under Roles select "Active Directory Domain Service".  It'll select everything under it that we'll need, and we need to make sure DNS Server role is installed as well during this process.  After getting to the end you have the necessary files installed for it to serve as an Active Directory server but it needs to be promoted first.  There is a flag with a caution sign on it now in the top right.  Clicking on it will show a Post-Deployment option to promote the server to a domain controller, and opens a new menu for creating it. [This article on building your First Domain Controller for Windows Server 2012](https://social.technet.microsoft.com/wiki/contents/articles/22622.building-your-first-domain-controller-on-2012-r2.aspx) is still relevant in the setup process for Server 2016.

Locally it wouldn't matter what we picked but since this will be integrated to Azure later on this is why I [registered a domain for use with the project](https://cleverness.tech/wiki/books/infrastructure-rollout/page/domain-registration).  Since I'm using josegsoto.com for this project that's the domain I'll be going with.  These changes will require a reboot to take effect.  After that, we can begin some Administration. 

## Active Directory Administrative Center

After reboot, at the Server Manager screen under Tools we now see more options, for now we want to go into the Active Directory Administrative Center.

As we can see this is a useful menu for some tasks such as password resets(which will happen all the time) but let's create a user besides the administrator one that we're using on this console, so that we can log into this domain from another machine.  By clicking josegsoto(local) we can get a new menu, and on the right see we see new things we can create like Organizational Unit(OU), Group, User, Computer, etc.  Just click User for now and we get the following screen for the user creation process.

We get to fill a pretty detailed information for the user, and if Groups are created we can assign it so it has specific permissions, a group email it could receive pings from, and who they would be Managed By.

After creating the User I wanted to test if I could actually now connect to this Domain, which I will write about here.

## Adding more Servers to Server Manager

The File Server mentioned here is what I'm using to manage shares and I want to add it to the DC Server Manager so it's integrated into the domain controller.  I grabbed the File Server IP address and assumed initially that would be enough.  The editing of the network settings was actually something that took me a long time to figure out when troubleshooting both this step as well as connecting other clients to my local domain.  In my home setup my primary DNS server on my router does not point to my Domain Controller at all, so for local setups trying to join the Domain will usually result in an error.  It wasn't until I manually edited the network settings of these devices to point to my Domain Controller as their primary DNS server that I was able to get them to recognize the domain, which makes sense as this domain at the moment is just local, not a global domain.

After figuring this out on the client side, I was able to quickly edit it on the File Server.  Back on the Domain Controller, clicking Manage and Add Server made it easy to find the File Server and add it.  Now it's been added to this Domain, and I could now Assign Roles and Features to it from this Server Manager if I chose to do so in the future.

## Creating a Local Network Share

This involved steps in both the Domain Controller and the File Server.  On the File Server I added 300gb of storage to it from a regular hard drive for the purpose of using it for Network Share storage, and create a new Volume (L:) with it under File and Storage Services.  Back on the Domain Controller, under File and Storage Services clicking Shares and right click gives a "New Share" option.  

There are options for SMB and NFS here, depending on who the shares are for.  I'm testing on Windows for now so I am going with SMB shares.

The next screen has us picking which server the share will be hosted on, and which volume.  I wanted these separate from the OS files, hence why the new Volume L: was created.  Note that as seen here, we didn't need to choose a full volume.  There is an option for a specific path, so if the main OS volume had enough capacity we could designate a specific folder path on there that would be available to be served as a Network Share.  Any sort of backups done on the OS Volume would then also effect these shares.

After creating this share, the last step so that local domain users could mount this network share is create the Shared Folder as an Object in Active Directory.  To do this under Tools we go to Active Directory Users and Computers, and Right-Click our domain name.  Under new we should see an option for Shared Folder.  Just give it a name and give it the network path for the share and it's created.  Manually mounting this same path on the user side will give them access to a network share that other users had access to as well, making it easy to share files with colleagues.  

## Syncing with Azure Active